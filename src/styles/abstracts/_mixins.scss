@use 'variables' as variables;
@use 'sass:map';
@use 'sass:list';

//Mixin for @font-face
@mixin font-face($name, $src, $weight, $formats) {
    @font-face {
        font-family: $name;
        src: url('#{$src}.eot');

        src: url('#{$src}.eot?#iefix') format('embedded-opentype') #{if(
                list.index($formats, 'woff2'),
                ', url("#{$src}.woff2") format("woff2")',
                ''
            )} #{if(
                list.index($formats, 'woff'),
                ', url("#{$src}.woff") format("woff")',
                ''
            )} #{if(
                list.index($formats, 'ttf'),
                ', url("#{$src}.ttf") format("truetype")',
                ''
            )} #{if(
                list.index($formats, 'svg'),
                ', url("#{$src}.svg##{$name}") format("svg")',
                ''
            )};

        font-weight: $weight;
        font-style: normal;
        font-display: swap;

        @content;
    }
}

//Mixin for adding icons in _icomoon.scss
@mixin icons($name, $content) {
    .icon-#{$name}:before {
        content: $content;
    }
}

//Mixin for flex container
@mixin flex-container($gap, $direction, $align, $justify) {
    display: flex;
    flex-direction: $direction;
    @if ($gap != -1) {
        gap: $gap * 1rem;
    }
    align-items: $align;
    justify-content: $justify;
}

//Mixin for adding icons in page
@mixin icon-styles($font-size, $bg-color, $bd-radius, $padding) {
    font-size: $font-size;
    @if ($bg-color != -1) {
        background-color: $bg-color;
    }
    border-radius: $bd-radius;
    padding: $padding;
}

//Mixin for media queries
@mixin responsive($screen) {
    @if map.has-key(variables.$breakpoints, $screen) {
        @media (min-width: map.get(variables.$breakpoints, $screen)) {
            @content;
        }
    }
}
